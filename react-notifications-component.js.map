{"version":3,"sources":["webpack://ReactNotifications/webpack/bootstrap","webpack://ReactNotifications/./src/helpers.js","webpack://ReactNotifications/./src/constants.js","webpack://ReactNotifications/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://ReactNotifications/./src/utils.js","webpack://ReactNotifications/./src/errors.js","webpack://ReactNotifications/./src/stage-helpers.js","webpack://ReactNotifications/./src/react-notification.js","webpack://ReactNotifications/./src/react-notification-component.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","isBottomContainer","isTopContainer","shouldNotificationHaveSliding","cssWidth","getHtmlClassesForType","getNotificationsForMobileView","notifications","TOP_LEFT","_constants","CONTAINER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","bottom","top","forEach","notification","container","toLowerCase","push","Error","getNotificationsForEachContainer","topLeft","topRight","bottomLeft","bottomRight","getInitialSlidingState","_ref","isFirstNotification","hasSliding","state","animatedElementClasses","rootElementStyle","height","marginBottom","overflow","width","animationIn","length","item","handleStageTransition","stateAnimatedElementClasses","stateRootStyle","currentX","startX","stage","NOTIFICATION_STAGE","TOUCH_SLIDING_ANIMATION_EXIT","_stageHelpers","handleTouchSlidingAnimationExit","SLIDING_ANIMATION_EXIT","handleSlidingAnimationExit","resized","getCubicBezierTransition","hasFullySwiped","diffX","Math","abs","window","innerWidth","requiredSwipeLength","getRootHeightStyle","scrollHeight","transition","slidingExit","duration","cubicBezier","delay","getIconHtmlContent","onClickHandler","dismissIcon","_react2","createElement","className","onClick","icon","validateDismissIconOption","validateAnimationIn","validateAnimationOut","validateTimeoutDismissOption","validateTransition","validateTitle","validateMessage","validateType","validateContainer","validateDismissable","validateInsert","validateWidth","validateUserDefinedTypes","getNotificationOptions","options","userDefinedTypes","insert","animationOut","slidingEnter","touchSlidingBack","touchSlidingExit","dismissable","dismiss","id","random","type","content","_utils","isNullOrUndefined","swipe","fade","u","INSERTION","TOP","BOTTOM","NOTIFICATION_BASE_CLASS","NOTIFICATION_TYPE","DEFAULT","SUCCESS","DANGER","WARNING","INFO","foundType","find","q","_errors2","TYPE_NOT_FOUND","concat","htmlClasses","arguments","DISMISS_ICON_CLASS","isString","DISMISS_ICON_STRING","DISMISS_ICON_CONTENT","isValidElement","DISMISS_ICON_INVALID","isArray","ANIMATION_IN","ANIMATION_OUT","DISMISS_REQUIRED","isNumber","DISMISS_NUMBER","DISMISS_POSITIVE","defaults","transitionOptions","TRANSITION_DURATION_NUMBER","TRANSITION_CUBICBEZIER_NUMBER","TRANSITION_DELAY_NUMBER","title","TITLE_STRING","message","MESSAGE_REQUIRED","MESSAGE_STRING","TYPE_REQUIRED","TYPE_STRING","TYPE_NOT_EXISTENT","CONTAINER_REQUIRED","CONTAINER_STRING","click","touch","option","isBoolean","DISMISSABLE_CLICK_BOOL","DISMISSABLE_TOUCH_BOOL","INSERT_STRING","WIDTH_NUMBER","definedTypes","REMOVAL","require","prop","constructor","Array","touchSwipeTransition","_helpers","touchFadeTransition","slidingExitTransition","getChildStyleForTouchTransitionExit","childElementStyle","horizontalLimit","touchSwipe","touchFade","opacity","position","left","a","ReactNotification","props","this","_this","__proto__","getPrototypeOf","onTransitionEnd","bind","onNotificationClick","setDismissTimeout","onAnimationEnd","onSmartSlidingEnd","onTouchSmartSlidingEnd","onTouchStart","onTouchMove","onTouchEnd","rootDOM","childDOM","timeoutId","Component","smartSliding","clearTimeout","_this2","_props","toggleTimeoutRemoval","setTimeout","setState","requestAnimationFrame","setRemovalTimeout","stopPropagation","target","isSameNode","endOfSmartSliding","toggleRemoval","key","_props2","undefined","_this3","touches","pageX","_props3","toggleTouchEnd","distance","_this4","touchHasEnded","join","onTouchCancel","ref","input","style","htmlCloseIconContent","notificationTitle","ReactNotificationComponent","types","addNotification","handleResize","renderReactNotifications","addEventListener","map","filter","_reactNotification2","isMobileView","isMobile","mobileNotifications","notificationsPerContainer"],"mappings":"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","file":"react-notifications-component.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import React from \"react\";\r\nimport {\r\n  handleTouchSlidingAnimationExit,\r\n  handleSlidingAnimationExit\r\n} from \"./stage-helpers\";\r\n\r\nimport {\r\n  NOTIFICATION_BASE_CLASS,\r\n  CONTAINER,\r\n  INSERTION,\r\n  NOTIFICATION_TYPE,\r\n  NOTIFICATION_STAGE\r\n} from \"./constants\";\r\n\r\nimport {\r\n  isNullOrUndefined,\r\n  isString,\r\n  isNumber,\r\n  isBoolean,\r\n  isArray\r\n} from \"./utils\";\r\n\r\nimport ERROR from \"./errors\";\r\n\r\nexport function isBottomContainer(container) {\r\n  return (\r\n    container === CONTAINER.BOTTOM_LEFT ||\r\n    container === CONTAINER.BOTTOM_RIGHT\r\n  );\r\n}\r\n\r\nexport function isTopContainer(container) {\r\n  return (\r\n    container === CONTAINER.TOP_LEFT ||\r\n    container === CONTAINER.TOP_RIGHT\r\n  );\r\n}\r\n\r\nexport function shouldNotificationHaveSliding(notification) {\r\n  return (\r\n    // slide DOWN if container is top and insertion is at top\r\n    (notification.insert === INSERTION.TOP && isTopContainer(notification.container)) ||\r\n    // slide UP if container is bottom and insertion is at bottom\r\n    (notification.insert === INSERTION.BOTTOM && isBottomContainer(notification.container))\r\n  );\r\n}\r\n\r\nexport function cssWidth(width) {\r\n  return width ? `${width}px` : undefined;\r\n}\r\n\r\nfunction htmlClassesForExistingType(type) {\r\n  switch (type.toLowerCase()) {\r\n    case NOTIFICATION_TYPE.DEFAULT:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-default\"];\r\n    case NOTIFICATION_TYPE.SUCCESS:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-success\"];\r\n    case NOTIFICATION_TYPE.DANGER:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-danger\"];\r\n    case NOTIFICATION_TYPE.WARNING:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-warning\"];\r\n    case NOTIFICATION_TYPE.INFO:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-info\"];\r\n    default:\r\n      throw new Error(`Type '${type}' is not valid nor user-defined`);\r\n  }\r\n}\r\n\r\nexport function getHtmlClassesForType(notification) {\r\n  const {\r\n    // option set by user\r\n    type,\r\n    // array value containing all custom types\r\n    userDefinedTypes\r\n  } = notification;\r\n\r\n  if (notification.content) {\r\n    // return only base class if type is not defined\r\n    return [NOTIFICATION_BASE_CLASS];\r\n  } else if (isNullOrUndefined(userDefinedTypes)) {\r\n    // existing type\r\n    return htmlClassesForExistingType(type);\r\n  }\r\n\r\n  // look for custom type if any defined\r\n  const foundType = userDefinedTypes.find(q => q.name === type);\r\n\r\n  if (!foundType) {\r\n    // custom type not found, throw error\r\n    throw new Error(ERROR.TYPE_NOT_FOUND);\r\n  }\r\n\r\n  // append base class to html classes\r\n  return [NOTIFICATION_BASE_CLASS].concat(foundType.htmlClasses);\r\n}\r\n\r\nexport function getNotificationsForMobileView(notifications) {\r\n  const {\r\n    TOP_LEFT,\r\n    TOP_RIGHT,\r\n    BOTTOM_LEFT,\r\n    BOTTOM_RIGHT\r\n  } = CONTAINER;\r\n\r\n  const bottom = [];\r\n  const top = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const container = notification.container.toLowerCase();\r\n    switch (container) {\r\n      case TOP_LEFT:\r\n      case TOP_RIGHT:\r\n        top.push(notification);\r\n        break;\r\n      case BOTTOM_LEFT:\r\n      case BOTTOM_RIGHT:\r\n        bottom.push(notification);\r\n        break;\r\n      default:\r\n        // throw error just in case validation didn't work properly\r\n        throw new Error(`Container ${notification.container} is not valid`);\r\n    }\r\n  });\r\n\r\n  return { top, bottom };\r\n}\r\n\r\nexport function getNotificationsForEachContainer(notifications) {\r\n  const topLeft = [];\r\n  const topRight = [];\r\n  const bottomLeft = [];\r\n  const bottomRight = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const {\r\n      TOP_LEFT,\r\n      TOP_RIGHT,\r\n      BOTTOM_LEFT,\r\n      BOTTOM_RIGHT\r\n    } = CONTAINER;\r\n\r\n    const container = notification.container.toLowerCase();\r\n    switch (container) {\r\n      case TOP_LEFT:\r\n        topLeft.push(notification);\r\n        break;\r\n      case TOP_RIGHT:\r\n        topRight.push(notification);\r\n        break;\r\n      case BOTTOM_LEFT:\r\n        bottomLeft.push(notification);\r\n        break;\r\n      case BOTTOM_RIGHT:\r\n        bottomRight.push(notification);\r\n        break;\r\n      default:\r\n        // throw error just in case validation didn't work properly\r\n        throw new Error(`Container ${notification.container} is not valid`);\r\n    }\r\n  });\r\n\r\n  return {\r\n    topLeft,\r\n    topRight,\r\n    bottomLeft,\r\n    bottomRight\r\n  };\r\n}\r\n\r\nexport function getInitialSlidingState({ notification, isFirstNotification }) {\r\n  // no sliding needed for first notification in container\r\n  const hasSliding = shouldNotificationHaveSliding(notification) && !isFirstNotification;\r\n  const state = {};\r\n\r\n  // set default classes for animated element\r\n  state.animatedElementClasses = getHtmlClassesForType(notification);\r\n  state.rootElementStyle = {\r\n    height: \"0\",\r\n    marginBottom: 0,\r\n    overflow: \"hidden\",\r\n    width: cssWidth(notification.width)\r\n  };\r\n\r\n  if (hasSliding) {\r\n    // hide content by toggling visibility while sliding\r\n    state.animatedElementClasses.push(\"invisible\");\r\n  } else if (notification.animationIn && notification.animationIn.length > 0) {\r\n    // add user defined notification classes if sliding will not occur\r\n    notification.animationIn.forEach(item => state.animatedElementClasses.push(item));\r\n  }\r\n\r\n  state.hasSliding = hasSliding;\r\n  return state;\r\n}\r\n\r\nexport function handleStageTransition(notification, state) {\r\n  let animatedElementClasses;\r\n  let rootElementStyle;\r\n\r\n  const {\r\n    animatedElementClasses: stateAnimatedElementClasses,\r\n    rootElementStyle: stateRootStyle,\r\n    currentX,\r\n    startX\r\n  } = state;\r\n\r\n  if (notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) {\r\n    return handleTouchSlidingAnimationExit(notification, currentX, startX);\r\n  } else if (notification.stage === NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT) {\r\n    return handleSlidingAnimationExit(notification);\r\n  } else if (notification.resized) {\r\n    // window got resized, do not apply animations\r\n    rootElementStyle = stateRootStyle;\r\n    animatedElementClasses = getHtmlClassesForType(notification);\r\n  } else {\r\n    // use values from state\r\n    rootElementStyle = stateRootStyle;\r\n    animatedElementClasses = stateAnimatedElementClasses;\r\n  }\r\n\r\n  return {\r\n    rootElementStyle,\r\n    animatedElementClasses\r\n  };\r\n}\r\n\r\nexport function getCubicBezierTransition(\r\n  duration = 500,\r\n  cubicBezier = \"linear\",\r\n  delay = 0,\r\n  property = \"height\"\r\n) {\r\n  return `${duration}ms ${property} ${cubicBezier} ${delay}ms`;\r\n}\r\n\r\nexport function hasFullySwiped(diffX) {\r\n  const swipeLength = Math.abs(diffX);\r\n  const requiredSwipeLength = (40 / 100) * window.innerWidth;\r\n\r\n  return swipeLength >= requiredSwipeLength;\r\n}\r\n\r\nexport function getRootHeightStyle(notification, scrollHeight) {\r\n  return {\r\n    height: `${scrollHeight}px`,\r\n    width: cssWidth(notification.width),\r\n    transition: getCubicBezierTransition(\r\n      notification.slidingExit.duration,\r\n      notification.slidingExit.cubicBezier,\r\n      notification.slidingExit.delay\r\n    )\r\n  };\r\n}\r\n\r\nexport function getIconHtmlContent(notification, onClickHandler) {\r\n  // use icon defined by user\r\n  if (notification.dismissIcon) {\r\n    return (\r\n      <div\r\n        className={notification.dismissIcon.className}\r\n        onClick={onClickHandler}\r\n      >\r\n        {notification.icon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // use standard icon\r\n  return (\r\n    <div\r\n      className=\"notification-close\"\r\n      onClick={onClickHandler}\r\n    >\r\n      <span>&times;</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function validateDismissIconOption(dismissIcon) {\r\n  if (isNullOrUndefined(dismissIcon)) return;\r\n\r\n  const { className, content } = dismissIcon;\r\n\r\n  if (!className) {\r\n    // className is required\r\n    throw new Error(ERROR.DISMISS_ICON_CLASS);\r\n  } else if (!isString(className)) {\r\n    // must be an array value\r\n    throw new Error(ERROR.DISMISS_ICON_STRING);\r\n  } else if (!content) {\r\n    // content is required\r\n    throw new Error(ERROR.DISMISS_ICON_CONTENT);\r\n  } else if (!React.isValidElement(content)) {\r\n    // must be a valid react element\r\n    throw new Error(ERROR.DISMISS_ICON_INVALID);\r\n  }\r\n}\r\n\r\nexport function validateAnimationIn(animationIn) {\r\n  if (isNullOrUndefined(animationIn)) {\r\n    return [];\r\n  } if (!isArray(animationIn)) {\r\n    // must be an array\r\n    throw new Error(ERROR.ANIMATION_IN);\r\n  }\r\n\r\n  return animationIn;\r\n}\r\n\r\nexport function validateAnimationOut(animationOut) {\r\n  if (isNullOrUndefined(animationOut)) {\r\n    return [];\r\n  } else if (!isArray(animationOut)) {\r\n    // must be an array\r\n    throw new Error(ERROR.ANIMATION_OUT);\r\n  }\r\n\r\n  return animationOut;\r\n}\r\n\r\nexport function validateTimeoutDismissOption(dismiss) {\r\n  // skip if option is not defined\r\n  if (isNullOrUndefined(dismiss)) return;\r\n\r\n  if (isNullOrUndefined(dismiss.duration)) {\r\n    throw new Error(ERROR.DISMISS_REQUIRED);\r\n  } else if (!isNumber(dismiss.duration)) {\r\n    // must be a number\r\n    throw new Error(ERROR.DISMISS_NUMBER);\r\n  } else if (dismiss.duration < 0) {\r\n    // duration must be positive\r\n    throw new Error(ERROR.DISMISS_POSITIVE);\r\n  }\r\n}\r\n\r\nexport function validateTransition(transition, defaults) {\r\n  const { duration, cubicBezier, delay } = defaults;\r\n  const transitionOptions = transition || {};\r\n\r\n  if (isNullOrUndefined(transitionOptions.duration)) {\r\n    // set default duration\r\n    transitionOptions.duration = duration;\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.cubicBezier)) {\r\n    // set default timing function\r\n    transitionOptions.cubicBezier = cubicBezier;\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.delay)) {\r\n    // set default delay\r\n    transitionOptions.delay = delay;\r\n  }\r\n\r\n  if (!isNumber(transitionOptions.duration)) {\r\n    // throw if duration is NaN\r\n    throw new Error(ERROR.TRANSITION_DURATION_NUMBER);\r\n  } else if (!isString(transitionOptions.cubicBezier)) {\r\n    // throw if cubicBezier is not a String\r\n    throw new Error(ERROR.TRANSITION_CUBICBEZIER_NUMBER);\r\n  } else if (!isNumber(transitionOptions.delay)) {\r\n    // throw if duration is NaN\r\n    throw new Error(ERROR.TRANSITION_DELAY_NUMBER);\r\n  }\r\n\r\n  return transitionOptions;\r\n}\r\n\r\nexport function validateTitle(notification) {\r\n  const { content, title } = notification;\r\n\r\n  // no need to validate if `title` is missing or `content` is present\r\n  if (content || title === null || title === undefined) return;\r\n\r\n  if (!isString(title)) {\r\n    // title must be a String\r\n    throw new Error(ERROR.TITLE_STRING);\r\n  }\r\n}\r\n\r\nexport function validateMessage(notification) {\r\n  const { content, message } = notification;\r\n\r\n  // option not required if content is defined\r\n  if (content) return;\r\n\r\n  if (message === null || message === undefined) {\r\n    throw new Error(ERROR.MESSAGE_REQUIRED);\r\n  } else if (!isString(message)) {\r\n    throw new Error(ERROR.MESSAGE_STRING);\r\n  }\r\n}\r\n\r\nexport function validateType(notification, userDefinedTypes) {\r\n  const { content, type } = notification;\r\n\r\n  if (content) {\r\n    // option not required if content is defined\r\n    return undefined;\r\n  } else if (isNullOrUndefined(type)) {\r\n    // type is required\r\n    throw new Error(ERROR.TYPE_REQUIRED);\r\n  } else if (!isString(type)) {\r\n    // type must be a String\r\n    throw new Error(ERROR.TYPE_STRING);\r\n  } else if (\r\n    isNullOrUndefined(userDefinedTypes) &&\r\n    type !== NOTIFICATION_TYPE.SUCCESS &&\r\n    type !== NOTIFICATION_TYPE.DANGER &&\r\n    type !== NOTIFICATION_TYPE.INFO &&\r\n    type !== NOTIFICATION_TYPE.DEFAULT &&\r\n    type !== NOTIFICATION_TYPE.WARNING\r\n  ) {\r\n    throw new Error(ERROR.TYPE_NOT_EXISTENT);\r\n  }\r\n\r\n  return type.toLowerCase();\r\n}\r\n\r\nexport function validateContainer(container) {\r\n  if (isNullOrUndefined(container)) {\r\n    // container is required\r\n    throw new Error(ERROR.CONTAINER_REQUIRED);\r\n  } else if (!isString(container)) {\r\n    // container must be a String\r\n    throw new Error(ERROR.CONTAINER_STRING);\r\n  }\r\n\r\n  return container.toLowerCase();\r\n}\r\n\r\nexport function validateDismissable(dismissable) {\r\n  if (isNullOrUndefined(dismissable)) {\r\n    return {\r\n      // set dissmisable by click as default\r\n      click: true,\r\n      // set dismissable on swipe as default\r\n      touch: true\r\n    };\r\n  }\r\n\r\n  const option = dismissable;\r\n\r\n  if (isNullOrUndefined(option.click)) {\r\n    // set dissmisable by click as default\r\n    option.click = true;\r\n  }\r\n\r\n  if (isNullOrUndefined(option.touch)) {\r\n    // set dismissable on swipe as default\r\n    option.touch = true;\r\n  }\r\n\r\n  if (!isBoolean(option.click)) {\r\n    // must be boolean\r\n    throw new Error(ERROR.DISMISSABLE_CLICK_BOOL);\r\n  } else if (!isBoolean(option.touch)) {\r\n    // must be boolean\r\n    throw new Error(ERROR.DISMISSABLE_TOUCH_BOOL);\r\n  }\r\n\r\n  return option;\r\n}\r\n\r\nexport function validateInsert(insert) {\r\n  if (isNullOrUndefined(insert)) {\r\n    // default to top if not defined\r\n    return \"top\";\r\n  } else if (!isString(insert)) {\r\n    // must be a string value (top|bottom)\r\n    throw new Error(ERROR.INSERT_STRING);\r\n  }\r\n\r\n  return insert;\r\n}\r\n\r\nexport function validateWidth(width) {\r\n  if (!isNumber(width)) {\r\n    // width must be a valid Number\r\n    throw new Error(ERROR.WIDTH_NUMBER);\r\n  }\r\n\r\n  return width;\r\n}\r\n\r\nexport function validateUserDefinedTypes(notification, definedTypes) {\r\n  const { content, type } = notification;\r\n\r\n  // no need to validate type if content is defined\r\n  if (content) return undefined;\r\n\r\n  if (\r\n    type === NOTIFICATION_TYPE.SUCCESS ||\r\n    type === NOTIFICATION_TYPE.DANGER ||\r\n    type === NOTIFICATION_TYPE.INFO ||\r\n    type === NOTIFICATION_TYPE.DEFAULT ||\r\n    type === NOTIFICATION_TYPE.WARNING ||\r\n    isNullOrUndefined(definedTypes)\r\n  ) return undefined;\r\n\r\n  // search for custom type in array\r\n  if (!definedTypes.find(p => p.name === type)) {\r\n    // custom type not found, throw exception\r\n    throw new Error(ERROR.TYPE_NOT_FOUND);\r\n  }\r\n\r\n  return definedTypes;\r\n}\r\n\r\nfunction getRandomId() {\r\n  return Math.random();\r\n}\r\n\r\nexport function getNotificationOptions(options, userDefinedTypes) {\r\n  const notification = options;\r\n  const {\r\n    insert,\r\n    container,\r\n    dismissIcon,\r\n    animationIn,\r\n    animationOut,\r\n    slidingEnter,\r\n    slidingExit,\r\n    touchSlidingBack,\r\n    touchSlidingExit,\r\n    dismissable,\r\n    dismiss,\r\n    width\r\n  } = notification;\r\n\r\n  // for now we'll use Math.random for id\r\n  notification.id = getRandomId();\r\n\r\n  // validate notification's title\r\n  validateTitle(notification);\r\n\r\n  // validate notification's body message\r\n  validateMessage(notification);\r\n\r\n  // validate notification's type\r\n  notification.type = validateType(notification, userDefinedTypes);\r\n\r\n  if (userDefinedTypes && !notification.content) {\r\n    // validate user defined types if any\r\n    notification.userDefinedTypes = validateUserDefinedTypes(notification, userDefinedTypes);\r\n  }\r\n\r\n  // validate notification's container\r\n  notification.container = validateContainer(container);\r\n\r\n  // set default insertion\r\n  notification.insert = validateInsert(insert);\r\n\r\n  // set default dismissable options\r\n  notification.dismissable = validateDismissable(dismissable);\r\n\r\n  // assert `dismissIcon` matches rules\r\n  validateDismissIconOption(dismissIcon);\r\n\r\n  // validate `animationIn` array\r\n  notification.animationIn = validateAnimationIn(animationIn);\r\n\r\n  // validate `animationOut` array\r\n  notification.animationOut = validateAnimationOut(animationOut);\r\n\r\n  if (!isNullOrUndefined(width)) {\r\n    // set width option only if defined\r\n    notification.width = validateWidth(width);\r\n  }\r\n\r\n  // defaults\r\n  const slidingEnterDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\r\n  const slidingExitDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\r\n  const swipeBackDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\r\n  const swipeExitDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\r\n  const swipeCompleteDefaults = { duration: 300, cubicBezier: \"ease-in\", delay: 0 };\r\n\r\n  // set defaults for sliding enter transition\r\n  notification.slidingEnter = validateTransition(slidingEnter, slidingEnterDefaults);\r\n\r\n  // set defaults for sliding exit transition\r\n  notification.slidingExit = validateTransition(slidingExit, slidingExitDefaults);\r\n\r\n  // set defaults for sliding back on touchEnd/touchCancel\r\n  notification.touchSlidingBack = validateTransition(touchSlidingBack, swipeBackDefaults);\r\n\r\n  // let it empty object if undefined\r\n  notification.touchSlidingExit = notification.touchSlidingExit || {};\r\n\r\n  // set defaults for swipe transition when swipe is complete\r\n  notification.touchSlidingExit.swipe = validateTransition(\r\n    touchSlidingExit.swipe || {},\r\n    swipeExitDefaults\r\n  );\r\n\r\n  // set defaults for fade transition when swipe is complete\r\n  notification.touchSlidingExit.fade = validateTransition(\r\n    touchSlidingExit.fade || {},\r\n    swipeCompleteDefaults\r\n  );\r\n\r\n  // assert `dismiss` matches rules\r\n  validateTimeoutDismissOption(dismiss);\r\n\r\n  return notification;\r\n}\r\n","export const NOTIFICATION_BASE_CLASS = \"notification-item\";\r\n\r\nexport const CONTAINER = {\r\n  BOTTOM_LEFT: \"bottom-left\",\r\n  BOTTOM_RIGHT: \"bottom-right\",\r\n  TOP_LEFT: \"top-left\",\r\n  TOP_RIGHT: \"top-right\"\r\n};\r\n\r\nexport const INSERTION = {\r\n  TOP: \"top\",\r\n  BOTTOM: \"bottom\"\r\n};\r\n\r\nexport const NOTIFICATION_TYPE = {\r\n  SUCCESS: \"success\",\r\n  DANGER: \"danger\",\r\n  INFO: \"info\",\r\n  DEFAULT: \"default\",\r\n  WARNING: \"warning\"\r\n};\r\n\r\nexport const NOTIFICATION_STAGE = {\r\n  // used for both sliding and animation at the same time\r\n  SLIDING_ANIMATION_EXIT: \"SLIDING_ANIMATION_EXIT\",\r\n\r\n  // used for onTouchMove/onTouchEnd to slide and animate\r\n  TOUCH_SLIDING_ANIMATION_EXIT: \"TOUCH_SLIDING_ANIMATION_EXIT\",\r\n\r\n  // used by API call to remove notification\r\n  REMOVAL: \"REMOVAL\"\r\n};\r\n","module.exports = require(\"react\");","export function isNullOrUndefined(prop) {\r\n  return prop === null || prop === undefined;\r\n}\r\n\r\nexport function isString(object) {\r\n  return typeof object === \"string\";\r\n}\r\n\r\nexport function isNumber(object) {\r\n  return typeof object === \"number\";\r\n}\r\n\r\nexport function isBoolean(object) {\r\n  return typeof object === \"boolean\";\r\n}\r\n\r\nexport function isArray(object) {\r\n  return !isNullOrUndefined(object) && object.constructor === Array;\r\n}\r\n","export default {\r\n  // dismiss icon option\r\n  DISMISS_ICON_CLASS: \"`className` property of `dismissIcon` is required\",\r\n  DISMISS_ICON_CONTENT: \"`content` property of `dismissIcon` is required\",\r\n  DISMISS_ICON_STRING: \"`className` property of `dismissIcon` must be a String\",\r\n  DISMISS_ICON_INVALID: \"`content` property of `dismissIcon` must be a valid React element\",\r\n\r\n  // animations\r\n  ANIMATION_IN: \"`animationIn' must be an array\",\r\n  ANIMATION_OUT: \"`animationOut' must be an array\",\r\n\r\n  // dismiss\r\n  DISMISS_REQUIRED: \"Dismiss `duration` is required\",\r\n  DISMISS_NUMBER: \"Dismiss `duration` must be a Number\",\r\n  DISMISS_POSITIVE: \"Dismiss `duration` must be a positive Number\",\r\n\r\n  // title\r\n  TITLE_STRING: \"`title` must be a String.\",\r\n\r\n  // message\r\n  MESSAGE_REQUIRED: \"`message` is required\",\r\n  MESSAGE_STRING: \"`message` must be a String\",\r\n\r\n  // type\r\n  TYPE_REQUIRED: \"`type` is required\",\r\n  TYPE_STRING: \"`type` must be a String\",\r\n  TYPE_NOT_EXISTENT: \"`type` could not be found in existing types. Typo maybe?\",\r\n\r\n  // container\r\n  CONTAINER_REQUIRED: \"`container` is required\",\r\n  CONTAINER_STRING: \"`container` must be a String\",\r\n\r\n  // dismissable\r\n  DISMISSABLE_CLICK_BOOL: \"`click` property from `dismissable` must be a Boolean\",\r\n  DISMISSABLE_TOUCH_BOOL: \"`touch` property from `dismissable` must be a Boolean\",\r\n\r\n  // width\r\n  WIDTH_NUMBER: \"`width` must be a Number\",\r\n\r\n  // insert\r\n  INSERT_STRING: \"`insert` must be a String\",\r\n\r\n  // transition\r\n  TRANSITION_DURATION_NUMBER: \"`duration` property of transition must be a Number\",\r\n  TRANSITION_CUBICBEZIER_NUMBER: \"`cubicBezier` property of transition must be a String\",\r\n  TRANSITION_DELAY_NUMBER: \"`delay` property of transition must be a Number\",\r\n\r\n  // custom types\r\n  TYPE_NOT_FOUND: \"Custom type not found. Typo maybe?\"\r\n};\r\n","import {\r\n  getHtmlClassesForType,\r\n  getCubicBezierTransition,\r\n  cssWidth\r\n} from './helpers';\r\n\r\nexport function touchSwipeTransition(notification) {\r\n  const { swipe } = notification.touchSlidingExit;\r\n\r\n  return getCubicBezierTransition(\r\n    swipe.duration,\r\n    swipe.cubicBezier,\r\n    swipe.delay,\r\n    \"left\"\r\n  );\r\n}\r\n\r\nexport function touchFadeTransition(notification) {\r\n  const { fade } = notification.touchSlidingExit;\r\n\r\n  return getCubicBezierTransition(\r\n    fade.duration,\r\n    fade.cubicBezier,\r\n    fade.delay,\r\n    \"opacity\"\r\n  );\r\n}\r\n\r\nexport function slidingExitTransition(notification) {\r\n  return getCubicBezierTransition(\r\n    notification.slidingExit.duration,\r\n    notification.slidingExit.cubicBezier,\r\n    notification.slidingExit.delay,\r\n    \"all\"\r\n  );\r\n}\r\n\r\nexport function getChildStyleForTouchTransitionExit(notification, currentX, startX) {\r\n  const horizontalLimit = window.innerWidth * 2;\r\n  const touchSwipe = exports.touchSwipeTransition(notification);\r\n  const touchFade = exports.touchFadeTransition(notification);\r\n\r\n  // set `opacity` and `left` to pull out notification from screen\r\n  return {\r\n    opacity: 0,\r\n    position: \"relative\",\r\n    left: `${currentX - startX >= 0 ? horizontalLimit : -horizontalLimit}px`,\r\n    transition: `${touchSwipe}, ${touchFade}`\r\n  };\r\n}\r\n\r\nexport function handleTouchSlidingAnimationExit(notification, currentX, startX) {\r\n  // set current html classes\r\n  const animatedElementClasses = getHtmlClassesForType(notification);\r\n  // set opacity and left to pull-out notification\r\n  const childElementStyle = getChildStyleForTouchTransitionExit(notification, currentX, startX);\r\n  // sliding out transition\r\n  const slidingTransition = exports.slidingExitTransition(notification);\r\n\r\n  return {\r\n    childElementStyle,\r\n    animatedElementClasses,\r\n    // slide to height 0\r\n    rootElementStyle: {\r\n      height: 0,\r\n      marginBottom: 0,\r\n      transition: slidingTransition,\r\n      width: cssWidth(notification.width)\r\n    },\r\n  };\r\n}\r\n\r\nexport function handleSlidingAnimationExit(notification) {\r\n  const { animationOut } = notification;\r\n  const animatedElementClasses = getHtmlClassesForType(notification);\r\n\r\n  if (animationOut) {\r\n    // add animation classes defined by user if any\r\n    animationOut.forEach(item => animatedElementClasses.push(item));\r\n  }\r\n\r\n  return {\r\n    // slide element to height 0\r\n    rootElementStyle: {\r\n      height: 0,\r\n      marginBottom: 0,\r\n      transition: slidingExitTransition(notification),\r\n      width: cssWidth(notification.width)\r\n    },\r\n    animatedElementClasses\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { NOTIFICATION_STAGE } from \"./constants\";\r\nimport {\r\n  getHtmlClassesForType,\r\n  handleStageTransition,\r\n  getCubicBezierTransition,\r\n  hasFullySwiped,\r\n  getRootHeightStyle,\r\n  getInitialSlidingState,\r\n  getIconHtmlContent,\r\n  cssWidth\r\n} from \"./helpers\";\r\n\r\nexport default class ReactNotification extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // methods binding\r\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\r\n    this.onNotificationClick = this.onNotificationClick.bind(this);\r\n    this.setDismissTimeout = this.setDismissTimeout.bind(this);\r\n    this.onAnimationEnd = this.onAnimationEnd.bind(this);\r\n\r\n    // smart sliding end\r\n    this.onSmartSlidingEnd = this.onSmartSlidingEnd.bind(this);\r\n    this.onTouchSmartSlidingEnd = this.onTouchSmartSlidingEnd.bind(this);\r\n\r\n    // touch events\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n    this.onTouchMove = this.onTouchMove.bind(this);\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n\r\n    // ref elements\r\n    this.rootDOM = null;\r\n    this.childDOM = null;\r\n\r\n    // component's state\r\n    this.state = getInitialSlidingState(props);\r\n    this.timeoutId = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.smartSliding();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      // clear timeout if any\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n  }\r\n\r\n  setDismissTimeout(duration) {\r\n    const {\r\n      notification,\r\n      toggleTimeoutRemoval\r\n    } = this.props;\r\n\r\n    const timeoutDismissHandler = () => {\r\n      this.setState({\r\n        rootElementStyle: getRootHeightStyle(\r\n          notification,\r\n          this.rootDOM.scrollHeight\r\n        )\r\n      }, () => requestAnimationFrame(() => toggleTimeoutRemoval(notification)));\r\n    };\r\n\r\n    this.timeoutId = setTimeout(timeoutDismissHandler, duration);\r\n  }\r\n\r\n  setRemovalTimeout(dismiss) {\r\n    if (dismiss && dismiss.duration) {\r\n      this.setDismissTimeout(dismiss.duration);\r\n    }\r\n  }\r\n\r\n  onAnimationEnd() {\r\n    // set to be dismissed by timeout if `dismiss` option is set\r\n    this.setRemovalTimeout(this.props.notification.dismiss);\r\n  }\r\n\r\n  onTransitionEnd() {\r\n    // sliding has finished, we need to add animation by using classes\r\n    const { notification } = this.props;\r\n\r\n    // get html classes for type\r\n    const animatedElementClasses = getHtmlClassesForType(notification);\r\n\r\n    // this needs to be customized\r\n    animatedElementClasses.push(\"visible\");\r\n\r\n    // look if animationIn array option has been filled in\r\n    if (notification.animationIn && notification.animationIn.length > 0) {\r\n      notification.animationIn.forEach(item => animatedElementClasses.push(item));\r\n    }\r\n\r\n    this.setState({\r\n      animatedElementClasses,\r\n      rootElementStyle: {\r\n        height: \"auto\",\r\n        width: cssWidth(notification.width)\r\n      }\r\n    });\r\n  }\r\n\r\n  onTouchSmartSlidingEnd(e) {\r\n    // stop propagation of transitionEnd\r\n    e.stopPropagation();\r\n\r\n    if (!e.target.isSameNode(this.rootDOM)) {\r\n      // skip if target is rootDOM node\r\n      return;\r\n    }\r\n\r\n    if (this.endOfSmartSliding) {\r\n      // remove notification\r\n      this.props.toggleRemoval(this.props.notification);\r\n    }\r\n\r\n    // both animation and sliding have finished\r\n    this.endOfSmartSliding = true;\r\n  }\r\n\r\n  onSmartSlidingEnd() {\r\n    const { toggleRemoval, notification } = this.props;\r\n\r\n    if (this.endOfSmartSliding) {\r\n      toggleRemoval(notification);\r\n    }\r\n\r\n    // both animationEnd and transitionEnd have finished\r\n    this.endOfSmartSliding = true;\r\n  }\r\n\r\n  smartSliding() {\r\n    const { notification } = this.props;\r\n    const { slidingEnter } = notification;\r\n\r\n    const animatedElementClasses = getHtmlClassesForType(notification);\r\n    const rootElementStyle = {\r\n      // set sliding transition unless `resize` event has been fired\r\n      // in which case we no longer slide nor animate\r\n      transition: notification.resized\r\n        ? undefined\r\n        : getCubicBezierTransition(\r\n          slidingEnter.duration,\r\n          slidingEnter.cubicBezier,\r\n          slidingEnter.delay\r\n        ),\r\n\r\n      // overwrite notification's width\r\n      width: cssWidth(notification.width),\r\n\r\n      // set height instead of auto\r\n      height: `${this.rootDOM.scrollHeight}px`\r\n    };\r\n\r\n    // if `resize` has been fired then no animation is going to happen\r\n    if (!notification.resized &&\r\n      notification.animationIn &&\r\n      notification.animationIn.length > 0) {\r\n      notification.animationIn.forEach(item => animatedElementClasses.push(item));\r\n    }\r\n\r\n    this.setState({\r\n      rootElementStyle,\r\n      animatedElementClasses\r\n    });\r\n  }\r\n\r\n  onNotificationClick() {\r\n    const { notification } = this.props;\r\n\r\n    this.setState({\r\n      rootElementStyle: getRootHeightStyle(notification, this.rootDOM.scrollHeight)\r\n    }, () => requestAnimationFrame(() => this.props.onClickHandler(notification)));\r\n  }\r\n\r\n  onTouchStart(e) {\r\n    this.setState({\r\n      startX: e.touches[0].pageX,\r\n      currentX: e.touches[0].pageX\r\n    });\r\n  }\r\n\r\n  onTouchMove(e) {\r\n    const {\r\n      notification,\r\n      toggleTouchEnd\r\n    } = this.props;\r\n\r\n    // distance between start and current\r\n    const distance = e.touches[0].pageX - this.state.startX;\r\n\r\n    if (hasFullySwiped(distance)) {\r\n      // move notification to the left/right by changing style\r\n      this.setState({\r\n        animatedElementClasses: getHtmlClassesForType(notification),\r\n        rootElementStyle: getRootHeightStyle(\r\n          notification,\r\n          this.rootDOM.scrollHeight\r\n        )\r\n      }, () => {\r\n        // remove notification from state\r\n        requestAnimationFrame(() => toggleTouchEnd(notification));\r\n      });\r\n      return;\r\n    }\r\n\r\n    // swiping is still in place\r\n    this.setState({\r\n      currentX: e.touches[0].pageX,\r\n      childElementStyle: {\r\n        position: \"relative\",\r\n        left: `${0 + distance}px`\r\n      }\r\n    });\r\n  }\r\n\r\n  onTouchEnd() {\r\n    const { touchSlidingBack } = this.props.notification;\r\n\r\n    this.setState({\r\n      childElementStyle: {\r\n        left: \"0\",\r\n        position: \"relative\",\r\n        transition: getCubicBezierTransition(\r\n          touchSlidingBack.duration,\r\n          touchSlidingBack.cubicBezier,\r\n          touchSlidingBack.delay,\r\n          \"left\"\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notification } = this.props;\r\n    let { childElementStyle } = this.state;\r\n    let { onAnimationEnd } = this;\r\n    let onNotificationClick = null;\r\n    let onTransitionEnd = null;\r\n    let touchHasEnded = false;\r\n\r\n    if (this.state.hasSliding) {\r\n      // set `onTransitionEnd` event if notification has sliding\r\n      ({ onTransitionEnd } = this);\r\n    }\r\n\r\n    const stage = handleStageTransition(notification, this.state);\r\n    const animatedElementClasses = (stage.animatedElementClasses || []).join(\" \");\r\n    let { rootElementStyle } = stage;\r\n\r\n    if (notification.dismissable.click) {\r\n      // set `onClick` event if notification is dismissable\r\n      ({ onNotificationClick } = this);\r\n    }\r\n\r\n    if (notification.stage === NOTIFICATION_STAGE.REMOVAL) {\r\n      onAnimationEnd = null;\r\n      rootElementStyle = getRootHeightStyle(notification, this.rootDOM.scrollHeight);\r\n    } else if (notification.stage === NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT) {\r\n      onAnimationEnd = this.onSmartSlidingEnd;\r\n      onTransitionEnd = this.onSmartSlidingEnd;\r\n    } else if (notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) {\r\n      onAnimationEnd = this.onTouchSmartSlidingEnd;\r\n      onTransitionEnd = this.onTouchSmartSlidingEnd;\r\n      onNotificationClick = null;\r\n      ({ childElementStyle } = stage);\r\n      touchHasEnded = true;\r\n    }\r\n\r\n    if (notification.content) {\r\n      return (\r\n        <div\r\n          onTouchStart={touchHasEnded ? null : this.onTouchStart}\r\n          onTouchMove={touchHasEnded ? null : this.onTouchMove}\r\n          onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\r\n          onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\r\n          onClick={onNotificationClick}\r\n          className=\"notification-item-root\"\r\n          onAnimationEnd={onAnimationEnd}\r\n          onTransitionEnd={onTransitionEnd}\r\n          ref={(input) => { this.rootDOM = input; }}\r\n          style={rootElementStyle}\r\n        >\r\n          <div\r\n            className={animatedElementClasses}\r\n            ref={(input) => { this.childDOM = input; }}\r\n            style={childElementStyle}\r\n          >\r\n            {notification.content}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const icon =\r\n      <div\r\n        className=\"notification-close\"\r\n        onClick={this.onClickHandler}>\r\n        <span>&times;</span>\r\n      </div>;\r\n\r\n    const htmlCloseIconContent = notification.dismissIcon ?\r\n      getIconHtmlContent(notification, this.onClickHandler) :\r\n      icon;\r\n\r\n    let notificationTitle;\r\n    if (notification.title) {\r\n      notificationTitle = <h4 className=\"notification-title\">{notification.title}</h4>;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onTouchStart={touchHasEnded ? null : this.onTouchStart}\r\n        onTouchMove={touchHasEnded ? null : this.onTouchMove}\r\n        onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\r\n        onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\r\n        onClick={onNotificationClick}\r\n        className=\"notification-item-root\"\r\n        onAnimationEnd={onAnimationEnd}\r\n        onTransitionEnd={onTransitionEnd}\r\n        ref={(input) => { this.rootDOM = input; }}\r\n        style={rootElementStyle}\r\n      >\r\n        <div\r\n          className={animatedElementClasses}\r\n          ref={(input) => { this.childDOM = input; }}\r\n          style={childElementStyle}\r\n        >\r\n          <div className=\"notification-content\">\r\n            {htmlCloseIconContent}\r\n            {notificationTitle}\r\n            <p className=\"notification-message\">\r\n              {this.props.notification.message}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactNotification from \"./react-notification\";\r\nimport { isArray } from \"./utils\";\r\nimport {\r\n  getNotificationsForEachContainer,\r\n  getNotificationsForMobileView,\r\n  getNotificationOptions\r\n} from \"./helpers\";\r\n\r\nimport {\r\n  INSERTION,\r\n  NOTIFICATION_STAGE\r\n} from \"./constants\";\r\n\r\nclass ReactNotificationComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // window width\r\n      width: window.innerWidth,\r\n      // notifications array data\r\n      notifications: []\r\n    };\r\n\r\n    if (isArray(props.types)) {\r\n      // check for custom types\r\n      this.state.userDefinedTypes = props.types;\r\n    }\r\n\r\n    // bind methods to `this`\r\n    this.addNotification = this.addNotification.bind(this);\r\n    this.onNotificationClick = this.onNotificationClick.bind(this);\r\n    this.toggleRemoval = this.toggleRemoval.bind(this);\r\n    this.toggleTimeoutRemoval = this.toggleTimeoutRemoval.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.renderReactNotifications = this.renderReactNotifications.bind(this);\r\n    this.toggleTouchEnd = this.toggleTouchEnd.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener for `resize` event\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({\r\n      width: window.innerWidth,\r\n      notifications: this.state.notifications.map((notification) => {\r\n        const object = notification;\r\n        object.resized = true;\r\n\r\n        return object;\r\n      })\r\n    });\r\n  }\r\n\r\n  toggleTimeoutRemoval(notification) {\r\n    this.setState({\r\n      notifications: this.state.notifications.map((item) => {\r\n        const object = item;\r\n        object.stage = object.id === notification.id ?\r\n          NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT :\r\n          object.stage;\r\n\r\n        return object;\r\n      })\r\n    });\r\n  }\r\n\r\n  // part of API\r\n  addNotification(object) {\r\n    // call will throw exception if object does not match rules\r\n    const notification = getNotificationOptions(\r\n      object,\r\n      // we need this to validate custom types if any\r\n      this.state.userDefinedTypes\r\n    );\r\n\r\n    const notifications =\r\n      notification.insert.toLowerCase() === INSERTION.TOP ?\r\n        [notification].concat(this.state.notifications) :\r\n        this.state.notifications.concat([notification]);\r\n\r\n    this.setState({ notifications });\r\n    return notification.id;\r\n  }\r\n\r\n  // part of API\r\n  removeNotification(id) {\r\n    this.setState({\r\n      notifications: this.state.notifications.map((item) => {\r\n        const object = item;\r\n\r\n        object.stage = object.id === id\r\n          ? NOTIFICATION_STAGE.REMOVAL\r\n          : object.stage;\r\n\r\n        return object;\r\n      })\r\n    }, () => {\r\n      requestAnimationFrame(() => {\r\n        this.setState({\r\n          notifications: this.state.notifications.map((item) => {\r\n            const object = item;\r\n\r\n            object.stage = object.id === id\r\n              ? NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT\r\n              : object.stage;\r\n            return object;\r\n          })\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onNotificationClick(notification) {\r\n    const hasDismissOption =\r\n      notification.dismissable.click ||\r\n      notification.dismissable.icon;\r\n\r\n    if (hasDismissOption) {\r\n      requestAnimationFrame(() => {\r\n        this.setState({\r\n          notifications: this.state.notifications.map((item) => {\r\n            const object = item;\r\n\r\n            object.stage = object.id === notification.id\r\n              ? NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT\r\n              : object.stage;\r\n\r\n            return object;\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleTouchEnd(notification) {\r\n    this.setState({\r\n      notifications: this.state.notifications.map((item) => {\r\n        const object = item;\r\n\r\n        object.stage = object.id === notification.id\r\n          ? NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT\r\n          : object.stage;\r\n\r\n        return object;\r\n      })\r\n    });\r\n  }\r\n\r\n  toggleRemoval(notification) {\r\n    this.setState({\r\n      notifications: this.state.notifications.filter(item => item.id !== notification.id)\r\n    });\r\n  }\r\n\r\n  renderReactNotifications(notifications) {\r\n    return notifications.map(notification => <ReactNotification\r\n      key={notification.id}\r\n      notification={notification}\r\n      isFirstNotification={notifications.length === 1}\r\n      onClickHandler={this.onNotificationClick}\r\n      toggleRemoval={this.toggleRemoval}\r\n      toggleTimeoutRemoval={this.toggleTimeoutRemoval}\r\n      toggleTouchEnd={this.toggleTouchEnd}\r\n    />);\r\n  }\r\n\r\n  render() {\r\n    const { state, props } = this;\r\n\r\n    const width = props.width === undefined ? 768 : props.width;\r\n    const isMobileView = state.width <= width;\r\n\r\n    if (props.isMobile && isMobileView) {\r\n      const mobileNotifications = getNotificationsForMobileView(state.notifications);\r\n      const top = this.renderReactNotifications(mobileNotifications.top);\r\n      const bottom = this.renderReactNotifications(mobileNotifications.bottom);\r\n\r\n      return (\r\n        <div className=\"react-notification-root\">\r\n          <div className=\"notification-container-mobile-top\">\r\n            {top.length > 0 && top}\r\n          </div>\r\n          <div className=\"notification-container-mobile-bottom\">\r\n            {bottom.length > 0 && bottom}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const notificationsPerContainer = getNotificationsForEachContainer(state.notifications);\r\n    const topLeft = this.renderReactNotifications(notificationsPerContainer.topLeft);\r\n    const topRight = this.renderReactNotifications(notificationsPerContainer.topRight);\r\n    const bottomLeft = this.renderReactNotifications(notificationsPerContainer.bottomLeft);\r\n    const bottomRight = this.renderReactNotifications(notificationsPerContainer.bottomRight);\r\n\r\n    return (\r\n      <div className=\"react-notification-root\">\r\n        <div className=\"notification-container-top-left\">\r\n          {topLeft.length > 0 && topLeft}\r\n        </div>\r\n        <div className=\"notification-container-top-right\">\r\n          {topRight.length > 0 && topRight}\r\n        </div>\r\n        <div className=\"notification-container-bottom-left\">\r\n          {bottomLeft.length > 0 && bottomLeft}\r\n        </div>\r\n        <div className=\"notification-container-bottom-right\">\r\n          {bottomRight.length > 0 && bottomRight}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactNotificationComponent;\r\n"],"sourceRoot":""}